#include <iostream>
#include <cstring>
#include <string>
#include <vector>
#include <iomanip>
using namespace std;

void printChart(vector<string> authors, vector<int> numNovelLst);
void printTable(vector<string> authors, vector<int> numNovelLst);
string title; 
string header1;
string header2;

int main()
{
   
   string dataPoint; 
   vector<string> authors;
   vector<int> numNovelLst;
   
   cout << "Enter a title for the data:" << endl;
   getline(cin , title); 
   cout << "You entered: " << title << endl;
   
   cout << "Enter the column 1 header:" << endl;
   getline(cin, header1);
   cout << "You entered: " << header1 << endl;
   
   cout << "Enter the column 2 header:" << endl;
   getline(cin, header2);
   cout << "You entered: " << header2 << endl;
   
   int stop = 0;
   while(stop != -1){
   
   cout << "Enter a data point (-1 to stop input):" << endl;
   getline(cin, dataPoint); 
   
   try {
      stop = stoi(dataPoint);
   }
   catch(invalid_argument &arg){
      stop = 1;
   }
   
   if(stop == -1){
      cout << endl;
      break;
   }
   
   int commaCount = 0;
   int commaLoc = 0;
   for(unsigned int i = 0; i < dataPoint.size(); i++){
      if(dataPoint[i] == ','){
         ++commaCount;
         commaLoc = i;
      }
   }
   
   if(commaCount == 0){
      cout << "Error: No comma in string." << endl;
      continue;
   }
   else if(commaCount > 1){
      cout << "Error: Too many commas in input." << endl;   
      continue;
   }
   
   string author = dataPoint.substr(0, commaLoc);
   
   int numNovels;
   string numNovelsStr = dataPoint.substr(commaLoc + 1, (dataPoint.size() - (commaLoc +1)));
   try {
      numNovels = stoi(numNovelsStr);
   }
   catch(...){
      cout << "Error: Comma not followed by an integer." << endl;
      continue; 
   }
  authors.push_back(author);
  numNovelLst.push_back(numNovels);
  
  cout << "Data string: " << author << endl;
  cout << "Data integer: " << numNovels << endl;
   
}
   //Print out data in table format
   printTable(authors, numNovelLst);
   cout << endl;
   //Print out data in chart format
   printChart(authors, numNovelLst);
   
   return 0;
}

void printTable(vector<string> authors, vector<int> numNovelLst){
   
   cout << setw(33) << right << title << endl;
   cout << setw(20) << left << header1 << "|";
   cout << setw(23) << right << header2 << endl;
   cout << "--------------------------------------------" << endl;
   
   for(int i = 0; i < authors.size(); i++){
      cout << setw(20) << left << authors[i] << "|";
      cout << setw(23) << right << numNovelLst[i] << endl;
      }

   }
   
void printChart(vector<string> authors, vector<int> numNovelLst){
   
   for(int i = 0; i < authors.size(); i++){
      
      cout << setw(20) << right << authors[i] << " ";
      
      for(int j = 0; j < numNovelLst[i]; j++)
         cout << "*";
         
      cout << endl;
      }
   }